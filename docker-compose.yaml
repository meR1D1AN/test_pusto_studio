services:
  db:
    container_name: pusto_studio_db
    image: postgres:17.6
    restart: unless-stopped
    env_file:
      - .env
    expose:
      - 5432
    volumes:
      - pusto_studio_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER -d $POSTGRES_DB' ]
      interval: 5s
      retries: 5
      timeout: 10s
    networks:
      - pusto_studio_backend

  app:
    container_name: pusto_studio_api
    build: .
    ports:
      - "${PORT_API}:${PORT_API}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_data:/app/static
    env_file:
      - .env
    command: >
      sh -c 'uv run python3 manage.py collectstatic --noinput &&
             uv run python3 manage.py makemigrations --noinput &&
             uv run python3 manage.py migrate &&
             uv run gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120 --preload'
    networks:
      - pusto_studio_backend

  nginx:
    image: nginx:1.29.1
    container_name: pusto_studio_nginx
    restart: unless-stopped
    ports:
      - "${PORT_NGINX}:${PORT_NGINX}"
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_data:/app/static
    networks:
      - pusto_studio_backend

networks:
  pusto_studio_backend:
    name: pusto_studio_backend

volumes:
  pusto_studio_data:
  static_data: